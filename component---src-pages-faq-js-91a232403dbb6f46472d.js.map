{"version":3,"file":"component---src-pages-faq-js-91a232403dbb6f46472d.js","mappings":"6LAiEA,WAAeA,EAAAA,EAAAA,IAxDA,CACXC,UAAW,CACP,OAAQ,CACJC,UAAW,SAGnBC,eAAgB,CACZ,cAAe,CACXC,OAAQ,YACRC,WAAY,CAAE,iBAAkB,cAChCC,SAAU,UAEd,mBAAoB,CAChBF,OAAQ,YACRC,WAAY,CAAE,mBAAoB,cAClCC,SAAU,SACVC,cAAe,cAEnB,wBAAyB,CACrBH,OAAQ,YAEZ,4BAA6B,CACzBI,MAAO,UACPC,eAAgB,SAGxBC,eAAgB,CACZ,cAAe,CACXN,OAAQ,oBACRC,WAAY,CAAE,iBAAkB,cAChCC,SAAU,SACVC,cAAe,cAEnB,mBAAoB,CAChBH,OAAQ,YAEZ,sBAAuB,CACnBA,OAAQ,WACRF,UAAW,UAEf,iBAAkB,CACdS,UAAW,SACXF,eAAgB,cAGxBG,OAAQ,CACJC,YAAa,WAEjBC,OAAQ,CACJC,QAAS,QACTC,SAAU,WACVC,KAAM,GACNC,WAAY,WAIpB,EAAmC,YAAwB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACrCC,EAAa,CAAE,UAAW,mBAE1BC,EAAUD,EAAWE,KAAI,SAACC,EAAUC,GACtC,MAAO,CACH,sBAAIC,IAAI,YAAYF,GAEpB,sBAAIE,IAAI,aACFN,EAAKO,KAAKC,MAAML,KAAI,SAACM,EAAKJ,GACxB,OAAOI,EAAIC,KAAKC,YAAYP,WAAaA,EACrC,sBAAIE,IAAKD,GACL,gBAAC,IAAD,CAAMO,GAAE,IAAMH,EAAIC,KAAKG,SAASC,eAC3BL,EAAIC,KAAKC,YAAYI,WAG9B,aAMdC,EAAUf,EAAWE,KAAI,SAACC,EAAUC,GACtC,MAAO,CACH,sBAAIC,IAAI,YAAYF,GAEpB,sBAAIE,IAAI,WACFN,EAAKO,KAAKC,MAAML,KAAI,SAACM,EAAKJ,GACxB,OAAOI,EAAIC,KAAKC,YAAYP,WAAaA,EACrC,sBAAIE,IAAKD,GACL,qBAAGY,UAAWlB,EAAQL,OACnBwB,KAAMT,EAAIC,KAAKG,SAASC,gBAE3B,iCAASL,EAAIC,KAAKC,YAAYI,UAC9B,uBACIE,UAAWlB,EAAQP,OACnB2B,wBAAyB,CAAEC,OAAQX,EAAIC,KAAKW,SAEpD,aAMpB,OACI,gBAAC,IAAD,KACI,uBAAKJ,UAAWlB,EAAQlB,WACpB,gBAAC,IAAD,CACIyC,gBAAiBtB,EAAKuB,gBAAgBC,gBAAgBC,OACtD,0BAAKzB,EAAK0B,SAASjB,IAAIkB,OACvB,yBAAI3B,EAAK0B,SAASjB,IAAImB,cAE1B,gBAAC,IAAD,CACIX,UAAWlB,EAAQhB,eACnB8C,QAAQ,mBACR,0BACI,mCACA,0BACK3B,KAIb,gBAAC,IAAD,CACIe,UAAWlB,EAAQT,eACnBuC,QAAQ,eACR,0BACKb","sources":["webpack://onairvr.io/./src/pages/faq.js"],"sourcesContent":["import React from 'react';\nimport injectSheet from 'react-jss';\nimport { graphql, StaticQuery } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport BackgroundImageSection from '../components/BackgroundImageSection';\nimport Section from '../components/Section';\nimport Link from '../components/Link';\n\nconst styles = {\n    container: {\n        '& li': {\n            listStyle: 'none'\n        }\n    },\n    sectionIndices: {\n        '& > ul > li': {\n            margin: '1.88rem 0',\n            fontFamily: [ 'Noto Sans Bold', 'sans-serif' ],\n            fontSize: '2.1rem'\n        },\n        '& > ul > ul > li': {\n            margin: '1.88rem 0',\n            fontFamily: [ 'Noto Sans Medium', 'sans-serif' ],\n            fontSize: '1.4rem',\n            textTransform: 'capitalize'\n        },\n        '& > ul > ul > ul > li': {\n            margin: '1.5rem 0'\n        },\n        '& > ul > ul > ul > li > a': {\n            color: '#0096C4',\n            textDecoration: 'none'\n        }\n    },\n    sectionAnswers: {\n        '& > ul > li': {\n            margin: '7.5rem 0 3.5rem 0',\n            fontFamily: [ 'Noto Sans Bold', 'sans-serif' ],\n            fontSize: '2.1rem',\n            textTransform: 'capitalize'\n        },\n        '& > ul > ul > li': {\n            margin: '3.5rem 0'\n        },\n        '& > ul > ul > li li': {\n            margin: '0.5rem 0',\n            listStyle: 'circle'\n        },\n        '& > ul > ul em': {\n            fontStyle: 'normal',\n            textDecoration: 'underline'\n        }\n    },\n    answer: {\n        paddingLeft: '1.25rem'\n    },\n    anchor: {\n        display: 'block',\n        position: 'relative',\n        top: -84,\n        visibility: 'hidden'\n    }\n};\n\nexport default injectSheet(styles)(({ classes, data }) => {\n    const categories = [ 'general', 'troubleshooting' ];\n\n    const indices = categories.map((category, index) => {\n        return [(\n            <li key=\"category\">{category}</li>\n        ), (\n            <ul key=\"questions\">\n                { data.faqs.edges.map((faq, index) => {\n                    return faq.node.frontmatter.category === category ? (\n                        <li key={index}>\n                            <Link to={`#${faq.node.internal.contentDigest}`}>\n                                {faq.node.frontmatter.question}\n                            </Link>\n                        </li>\n                    ) : null;\n                })}\n            </ul>\n        )];\n    });\n\n    const answers = categories.map((category, index) => {\n        return [(\n            <li key=\"category\">{category}</li>\n        ), (\n            <ul key=\"answers\">\n                { data.faqs.edges.map((faq, index) => {\n                    return faq.node.frontmatter.category === category ? (\n                        <li key={index}>\n                            <a className={classes.anchor}\n                               name={faq.node.internal.contentDigest}\n                               />\n                            <div>Q. {faq.node.frontmatter.question}</div>\n                            <div\n                                className={classes.answer}\n                                dangerouslySetInnerHTML={{ __html: faq.node.html }} />\n                        </li>\n                    ) : null;\n                })}\n            </ul>\n        )];        \n    });\n    \n    return (\n        <Layout>\n            <div className={classes.container}>\n                <BackgroundImageSection\n                    sizesBackground={data.imageBackground.childImageSharp.fluid}>\n                    <h1>{data.contents.faq.title}</h1>\n                    <p>{data.contents.faq.description}</p>\n                </BackgroundImageSection>\n                <Section\n                    className={classes.sectionIndices}\n                    padding=\"2rem 0 0.5rem 0\">\n                    <ul>\n                        <li>Index</li>\n                        <ul>\n                            {indices}\n                        </ul>\n                    </ul>\n                </Section>\n                <Section\n                    className={classes.sectionAnswers}\n                    padding=\"0 0 16rem 0\">\n                    <ul>\n                        {answers}\n                    </ul>\n                </Section>\n            </div>\n        </Layout>\n    );\n});\n\nexport const query = graphql`\n    query IndexFaqQuery {\n        ...IndexFaqFragment\n    }\n\n    fragment IndexFaqFragment on Query {\n        imageBackground: file(relativePath: { eq: \"bg_faq.jpg\" }) {\n            childImageSharp {\n                fluid(maxWidth: 2000, quality: 90) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n\n        contents: stringsToml {\n            faq {\n                title\n                description\n            }\n        }\n\n        faqs: allMarkdownRemark(\n            filter: {\n                frontmatter: { type: { eq: \"faq\" } }\n            }, sort: {\n                fields: [ frontmatter___order ],\n                order: ASC\n            }\n        ) {\n            edges {\n                node {\n                    internal {\n                        contentDigest\n                    }\n                    frontmatter {\n                        category\n                        question\n                    }\n                    html\n                }\n            }\n        }\n    }\n`;\n"],"names":["injectSheet","container","listStyle","sectionIndices","margin","fontFamily","fontSize","textTransform","color","textDecoration","sectionAnswers","fontStyle","answer","paddingLeft","anchor","display","position","top","visibility","classes","data","categories","indices","map","category","index","key","faqs","edges","faq","node","frontmatter","to","internal","contentDigest","question","answers","className","name","dangerouslySetInnerHTML","__html","html","sizesBackground","imageBackground","childImageSharp","fluid","contents","title","description","padding"],"sourceRoot":""}