{"version":3,"file":"component---src-pages-index-js-3354acffab59f99449a1.js","mappings":"+IAaMA,EAAS,CACXC,UAAW,CACPC,SAAU,oBAAGA,SAAH,kBAAcC,EAAAA,EAAd,GACVC,OAAQ,UAEZC,QAAS,CACLC,MAAO,oBAAGA,MAAH,kBAAW,MAAX,GACPC,OAAQ,oBAAGC,OAAH,kBAAY,EAAZ,GACRJ,OAAQ,SACRK,gBAAiB,oBAAGC,MAAH,kBAAW,QAAX,KAIzB,KAAeC,EAAAA,EAAAA,IAAYX,EAA3B,EArBgB,SAAC,GAAiB,IAAfY,EAAc,EAAdA,QACf,OACI,uBAAKC,UAAWD,EAAQX,WACpB,uBAAKY,UAAWD,EAAQP,e,yLC6BpC,GAAeM,EAAAA,EAAAA,IAxBA,CACXV,UAAW,CACPK,MAAO,oBAAGA,MAAH,kBAAW,UAAX,GACPC,OAAQ,oBAAGA,OAAH,kBAAY,QAAZ,GACRO,QAAS,cACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChB,OAAQ,CACJC,WAAY,CAAE,qBAAsB,cACpCC,SAAU,UACVC,WAAY,SACZC,aAAc,GAElB,MAAO,CACHF,SAAU,WAEd,MAAO,CACHT,MAAO,UACPY,eAAgB,UAK5B,EAjCqB,SAAC,GAAqC,IAAnCV,EAAkC,EAAlCA,QAASW,EAAyB,EAAzBA,UAAyB,YACtD,OACI,uBACIV,UAAWD,EAAQX,WAClBsB,M,UCIPrB,EAAW,WAwCjB,GAAeS,EAAAA,EAAAA,IAtCA,CACXa,WAAY,CACRlB,MAAO,OACPC,OAAQ,SACRkB,OAAQ,OACRhB,gBAAiB,WAErBiB,QAAS,CACLZ,QAAS,OACTC,cAAe,SACfC,WAAY,SACZG,SAAU,UACV,OAAQ,CACJQ,UAAW,UAEf,MAAO,CACHrB,MAAO,MACPqB,UAAW,SACXC,WAAY,MAGpBC,QAAS,CACLvB,MAAO,OACPF,OAAQ,kBAEZ0B,gBAAiB,CACbhB,QAAS,OACTiB,SAAU,OACVd,eAAgB,UAEpBe,SAAU,CACNlB,QAAS,OACTmB,SAAU,OACVhB,eAAgB,SAChBb,OAAQ,WAIhB,EAAmC,YAAwB,IAArBQ,EAAoB,EAApBA,QAASsB,EAAW,EAAXA,KACrCC,EACF,gBAACC,EAAA,EAAD,CACIC,QAAQ,EACRnC,SAAUA,EACVoC,gBAAiBJ,EAAKK,gBAAgBC,gBAAgBC,MACtDxB,eAAe,UACf,0BAAKiB,EAAKQ,SAASC,KAAKC,OACxB,yBAAIV,EAAKQ,SAASC,KAAKE,aACvB,gBAACC,EAAA,EAAD,CAAMC,GAAG,cACL,0BAAQlC,UAAWD,EAAQY,WAAYwB,KAAK,UACvCd,EAAKQ,SAASC,KAAKM,YAM9BC,EAAWhB,EAAKQ,SAASC,KAAKQ,QAAQC,KAAI,SAACD,EAASE,GACtD,IAAIC,EASJ,OARApB,EAAKqB,cAAcC,MAAMC,MAAK,SAACC,EAAML,GACjC,OAAIK,EAAKC,KAAKC,OAAST,EAAQS,OAC3BN,EAAQI,EAAKC,KAAKnB,gBAAgBC,OAC3B,MAKRa,EACH,gBAAC,EAAD,CAAcO,IAAKR,GACf,gBAAC,IAAD,CAAKS,MAAO,CAAExD,MAAO,WAAYgD,MAAOA,IACxC,0BAAKH,EAAQY,QACb,yBAAIZ,EAAQN,cAEhB,QAGFf,EACF,gBAACkC,EAAA,EAAD,CAASnD,UAAWD,EAAQkB,gBAAiB5B,SAAUA,GAClDgD,GAIHe,EACF,gBAACD,EAAA,EAAD,CAASnD,UAAWD,EAAQc,QAASxB,SAAUA,GAC3C,0BAAKgC,EAAKQ,SAASC,KAAKuB,SAASH,QACjC,yBAAI7B,EAAKQ,SAASC,KAAKuB,SAASrB,aAChC,gBAAC,IAAD,CACIsB,sBAAuBvD,EAAQiB,QAC/ByB,MAAOpB,EAAKkC,cAAc5B,gBAAgBC,SAKhD4B,EACF,gBAACjC,EAAA,EAAD,CACIC,QAAQ,EACRnC,SAAUA,EACVoC,gBAAiBJ,EAAKoC,YAAY9B,gBAAgBC,MAClDxB,eAAe,SACfsD,UAAU,QACV,0BAAKrC,EAAKQ,SAASC,KAAK6B,OAAOT,QAC/B,yBAAI7B,EAAKQ,SAASC,KAAK6B,OAAO3B,aAC9B,gBAACC,EAAA,EAAD,CAAMC,GAAG,YACL,0BAAQlC,UAAWD,EAAQY,WAAYwB,KAAK,UACvCd,EAAKQ,SAASC,KAAK6B,OAAOC,WAMrCzC,EAAW,CAAC,CACd4B,KAAM,qBACNb,GAAI,4BACJO,MAAOpB,EAAKwC,iBAAiBlC,gBAAgBC,OAC9C,CACCmB,KAAM,oBACNb,GAAI,uBACJO,MAAOpB,EAAKyC,iBAAiBnC,gBAAgBC,QAC9CW,KAAI,SAACwB,EAASvB,GACb,OACI,gBAAC,EAAD,CAAcQ,IAAKR,EAAO/C,MAAM,UAAUC,OAAO,SAC7C,gBAACuC,EAAA,EAAD,CAAMC,GAAI6B,EAAQ7B,IACd,gBAAC,IAAD,CAAKO,MAAOsB,EAAQtB,QACpB,yBAAIsB,EAAQhB,WAMtBiB,EACF,gBAACb,EAAA,EAAD,CAASnD,UAAWD,EAAQc,QAASxB,SAAUA,GAC3C,0BAAKgC,EAAKQ,SAASC,KAAKiC,QAAQb,QAChC,yBAAI7B,EAAKQ,SAASC,KAAKiC,QAAQ/B,aAC/B,uBAAKhC,UAAWD,EAAQoB,UACnBA,IAKb,OACI,gBAAC,IAAD,KACI,2BACKG,EACAL,EACD,gBAACgD,EAAA,EAAD,CAAS5E,SAAUA,IAClB+D,EACAI,EACAQ","sources":["webpack://onairvr.io/./src/components/Divider.js","webpack://onairvr.io/./src/components/ImageSnippet.js","webpack://onairvr.io/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport injectSheet from 'react-jss';\n\nimport { layoutMaxWidth } from '../components/const.js';\n\nconst Divider = ({ classes }) => {\n    return (\n        <div className={classes.container}>\n            <div className={classes.divider} />\n        </div>\n    );\n};\n\nconst styles = {\n    container: {\n        maxWidth: ({ maxWidth = layoutMaxWidth }) => maxWidth,\n        margin: '0 auto'\n    },\n    divider: {\n        width: ({ width = '50%'}) => width,\n        height: ({ stroke = 1}) => stroke,\n        margin: '0 auto',\n        backgroundColor: ({ color = 'black' }) => color\n    }\n};\n\nexport default injectSheet(styles)(Divider);\n","import React from 'react';\nimport injectSheet from 'react-jss';\nimport Img from 'gatsby-image';\n\nconst ImageSnippet = ({ classes, children, ...other }) => {\n    return (\n        <div\n            className={classes.container}>\n            {children}\n        </div>\n    );\n};\n\nconst styles = {\n    container: {\n        width: ({ width = '21.2rem'}) => width,\n        height: ({ height = '20rem'}) => height,\n        display: 'inline-flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& h1': {\n            fontFamily: [ 'Noto Sans SemiBold', 'sans-serif' ],\n            fontSize: '1.53rem',\n            fontWeight: 'normal',\n            marginBottom: 0\n        },\n        '& p': {\n            fontSize: '1.06rem'\n        },\n        '& a': {\n            color: '#3F3F3F',\n            textDecoration: 'none'\n        }\n    }\n};\n\nexport default injectSheet(styles)(ImageSnippet);\n","import React from 'react';\nimport injectSheet from 'react-jss';\nimport Img from 'gatsby-image';\nimport { graphql, StaticQueryDocument } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport BackgroundImageSection from '../components/BackgroundImageSection';\nimport Section from '../components/Section';\nimport Link from '../components/Link';\nimport ImageSnippet from '../components/ImageSnippet';\nimport Divider from '../components/Divider';\n\nconst maxWidth = '73.85rem';\n\nconst styles = {\n    buttonRect: {\n        width: '21em',\n        height: '3.67em',\n        border: 'none',\n        backgroundColor: '#43AAFF'\n    },\n    section: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        fontSize: '1.06rem',\n        '& h4': {\n            textAlign: 'center'\n        },\n        '& p': {\n            width: '78%',\n            textAlign: 'center',\n            lineHeight: 1.3\n        }\n    },\n    diagram: {\n        width: '100%',\n        margin: '5rem 0 10rem 0'\n    },\n    sectionFeatures: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    contacts: {\n        display: 'flex',\n        flexWrqp: 'wrap',\n        justifyContent: 'center',\n        margin: '2rem 0'\n    }\n};\n\nexport default injectSheet(styles)(({ classes, data }) => {\n    const sectionTop = (\n        <BackgroundImageSection\n            taller={true}\n            maxWidth={maxWidth}\n            sizesBackground={data.imageBackground.childImageSharp.fluid}\n            justifyContent='center'>\n            <h1>{data.contents.home.title}</h1>\n            <p>{data.contents.home.description}</p>\n            <Link to=\"/downloads\">\n                <button className={classes.buttonRect} type=\"button\">\n                    {data.contents.home.download}\n                </button>\n            </Link>\n        </BackgroundImageSection>\n    );\n    \n    const features = data.contents.home.feature.map((feature, index) => {\n        let sizes;\n        data.imageFeatures.edges.some((edge, index) => {\n            if (edge.node.name === feature.name) {\n                sizes = edge.node.childImageSharp.fluid;\n                return true;\n            }\n            return false;\n        });\n\n        return sizes ? (\n            <ImageSnippet key={index}>\n                <Img style={{ width: '6.47rem' }}sizes={sizes} />\n                <h1>{feature.header}</h1>\n                <p>{feature.description}</p>\n            </ImageSnippet>\n        ) : null;\n    });\n\n    const sectionFeatures = (\n        <Section className={classes.sectionFeatures} maxWidth={maxWidth}>\n            {features}\n        </Section>\n    );\n\n    const sectionHowWorks = (\n        <Section className={classes.section} maxWidth={maxWidth}>\n            <h4>{data.contents.home.howworks.header}</h4>\n            <p>{data.contents.home.howworks.description}</p>\n            <Img\n                outerWrapperClassName={classes.diagram}\n                sizes={data.imageHowWorks.childImageSharp.fluid}\n                />\n        </Section>\n    );\n\n    const sectionMoving = (\n        <BackgroundImageSection\n            taller={true}\n            maxWidth={maxWidth}\n            sizesBackground={data.imageMoving.childImageSharp.fluid}\n            justifyContent='center'\n            boxShadow='none'>\n            <h1>{data.contents.home.moving.header}</h1>\n            <p>{data.contents.home.moving.description}</p>\n            <Link to=\"/usecase\">\n                <button className={classes.buttonRect} type=\"button\">\n                    {data.contents.home.moving.usecase}\n                </button>\n            </Link>\n        </BackgroundImageSection>\n    );\n\n    const contacts = [{\n        name: \"contact@onairvr.io\",\n        to: \"mailto:contact@onairvr.io\",\n        sizes: data.imageContactMail.childImageSharp.fluid\n    }, {\n        name: \"www.clicked.co.kr\",\n        to: \"http://clicked.co.kr\",\n        sizes: data.imageContactSite.childImageSharp.fluid\n    }].map((contact, index) => {\n        return (\n            <ImageSnippet key={index} width='12.4rem' height='12rem'>\n                <Link to={contact.to}>\n                    <Img sizes={contact.sizes} />\n                    <p>{contact.name}</p>\n                </Link>\n            </ImageSnippet>\n        );\n    });\n\n    const sectionContact = (\n        <Section className={classes.section} maxWidth={maxWidth}>\n            <h4>{data.contents.home.contact.header}</h4>\n            <p>{data.contents.home.contact.description}</p>\n            <div className={classes.contacts}>\n                {contacts}\n            </div>\n        </Section>\n    );\n    \n    return (\n        <Layout>\n            <div>\n                {sectionTop}\n                {sectionFeatures}\n                <Divider maxWidth={maxWidth} />\n                {sectionHowWorks}\n                {sectionMoving}\n                {sectionContact}\n            </div>\n        </Layout>\n    );\n});\n\nexport const query = graphql`\n    query IndexHomeQuery {\n        ...IndexHomeFragment\n    }\n\n    fragment IndexHomeFragment on Query {\n        imageBackground: file(relativePath: { eq: \"bg_home.jpg\" }) {\n            childImageSharp {\n                fluid(maxWidth: 2000, quality: 90) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n\n        imageFeatures: allFile(filter: {relativeDirectory: { eq: \"features\" } }) {\n            edges {\n                node {\n                    name\n                    childImageSharp {\n                        fluid(maxWidth: 110) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n\n        imageHowWorks: file(relativePath: { eq: \"howworks.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 2000) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n\n        imageMoving: file(relativePath: { eq: \"bg_moving.jpg\" }) {\n            childImageSharp {\n                fluid(maxWidth:2000) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n\n        imageContactMail: file(relativePath: { eq: \"contact_mail.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 150) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n\n        imageContactSite: file(relativePath: { eq: \"contact_site.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 150) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n\n        contents: stringsToml {\n            home {\n                title\n                description\n                download\n                feature {\n                    name\n                    header\n                    description\n                }\n                howworks {\n                    header\n                    description\n                }\n                moving {\n                    header\n                    description\n                    usecase\n                }\n                contact {\n                    header\n                    description\n                }\n            }\n        }\n    }\n`;\n"],"names":["styles","container","maxWidth","layoutMaxWidth","margin","divider","width","height","stroke","backgroundColor","color","injectSheet","classes","className","display","flexDirection","alignItems","justifyContent","fontFamily","fontSize","fontWeight","marginBottom","textDecoration","children","buttonRect","border","section","textAlign","lineHeight","diagram","sectionFeatures","flexWrap","contacts","flexWrqp","data","sectionTop","BackgroundImageSection","taller","sizesBackground","imageBackground","childImageSharp","fluid","contents","home","title","description","Link","to","type","download","features","feature","map","index","sizes","imageFeatures","edges","some","edge","node","name","key","style","header","Section","sectionHowWorks","howworks","outerWrapperClassName","imageHowWorks","sectionMoving","imageMoving","boxShadow","moving","usecase","imageContactMail","imageContactSite","contact","sectionContact","Divider"],"sourceRoot":""}